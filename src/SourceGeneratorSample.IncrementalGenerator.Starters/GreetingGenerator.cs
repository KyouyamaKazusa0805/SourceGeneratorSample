namespace SourceGeneratorSample.IncrementalGenerator.Starters;

/// <summary>
/// 打招呼的源代码生成器，使用 <see cref="IIncrementalGenerator"/> 接口类型进行生成。
/// </summary>
/// <seealso cref="IIncrementalGenerator"/>
[Generator(LanguageNames.CSharp)]
public sealed class GreetingGenerator : IIncrementalGenerator
{
	/// <inheritdoc/>
	public void Initialize(IncrementalGeneratorInitializationContext context)
		=> context.RegisterPostInitializationOutput(
			static context => context.AddSource(
				$"Greeting_UseIncrementalGenerator{SourceGeneratorFileNameShortcut.GreetingGenerator_UseIncrementalGenerator}",
				$$"""
				// <auto-generated/>

				#nullable enable
				namespace SourceGeneratorSample.Greetings;

				/// <summary>
				/// 用于打招呼的类型，使用 <c>{{nameof(IIncrementalGenerator)}}</c> 进行源代码生成。
				/// </summary>
				[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
				[global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{nameof(GreetingGenerator)}}", "{{SourceGeneratorVersion.Value}}")]
				public static class Greeting_UseIncrementalGenerator
				{
					/// <summary>
					/// 和固定的人打招呼。
					/// </summary>
					/// <param name="name">表示对谁打招呼。指定一个字符串，表示其人的名字。</param>
					[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
					[global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{nameof(GreetingGenerator)}}", "{{SourceGeneratorVersion.Value}}")]
					public static void SayHelloTo(string name)
						=> global::System.Console.WriteLine($"Hello, {name}!");
				}
				"""
			)
		);
}
